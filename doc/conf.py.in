# -*- coding: utf-8 -*-
from __future__ import unicode_literals, print_function, absolute_import
import sphinx_bootstrap_theme
import os
import sys
sys.path.insert(0, os.path.join("@CMAKE_CURRENT_SOURCE_DIR@", "ext"))

ROOT = os.path.join("@CMAKE_CURRENT_SOURCE_DIR@", "src")

def setup(app):
    app.add_stylesheet("lemon.css")

# -- General configuration ------------------------------------------------
# If your documentation needs a minimal Sphinx version, state it here.
needs_sphinx = '1.4'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',
]

# The suffix of source filenames.
source_suffix = '.rst'
# The encoding of source files.
source_encoding = 'utf-8'
# The master toctree document.
master_doc = 'index'
# General information about the project.
project = 'Lemon'
# Get release and version numbers
release =  "master"
# icons
html_favicon = os.path.join("@CMAKE_CURRENT_SOURCE_DIR@", "icon.ico")
latex_logo = os.path.join("@CMAKE_CURRENT_SOURCE_DIR@", "icon.svg")
html_logo = os.path.join("@CMAKE_CURRENT_SOURCE_DIR@", "icon.svg")

# Breathe projects
breathe_projects = {
    "lemon": os.path.join("@CMAKE_CURRENT_BINARY_DIR@", "doxygen", "xml")
}
breathe_default_project = "lemon"

# Add any paths that contain templates here, relative to this directory.
templates_path = [os.path.join(ROOT, "..", "templates")]
# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'bootstrap'
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

html_theme_options = {
    'navbar_site_name': "Navigation",
    'navbar_pagenav': False,
    'source_link_position': None,
    'bootswatch_theme': "flatly",
    'bootstrap_version': "3",
}

html_sidebars = {
    '**': ['sidebar-toc.html', 'searchbox.html']
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [os.path.join(ROOT, "static", "css", "lemon.css")]

# Output file base name for HTML help builder.
htmlhelp_basename = 'lemon'
